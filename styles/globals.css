@tailwind base;
@tailwind components;
@tailwind utilities;

  .button-grow {
    transform: scale(1);
    transition: transform 0.3s ease;
  }
  
  .button-grow:hover {
    transform: scale(1.1);
  }
  .button-grow-subtle {
    transform: scale(1);
    transition: transform 0.3s ease;
  }
  
  .button-grow-subtle:hover {
    transform: scale(1.05);
  }

  @keyframes slideIn {
    from {
      transform: translateX(-100%);
    }
    to {
      transform: translateX(0);
    }
  }
  
  @keyframes slideOut {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-100%);
    }
  }
  
  .drawer-animation {
    animation: slideIn 0.3s ease-out forwards;
    transform-origin: left;
  }
  
  /* Since your component returns null when closed, you'll need to add this
     animation when the component is about to unmount. To achieve this,
     you'll need to modify your component to use a state for animation: */
  .drawer-animation-exit {
    animation: slideOut 0.3s ease-in forwards;
  }

  
  @keyframes slideInRight {
    from {
      transform: translateX(100%);
    }
    to {
      transform: translateX(0);
    }
  }
  
  @keyframes slideOutRight {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(100%);
    }
  }
  
  .drawer-right-animation {
    animation: slideInRight 0.3s ease-out forwards;
    transform-origin: right;
  }
  
  .drawer-right-animation-exit {
    animation: slideOutRight 0.3s ease-in forwards;
  }

  html {
    padding-right: 0 !important;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
  }
  
  .animate-fade-out {
    animation: fadeOut 0.3s ease-in-out forwards;
  }
  
  .animate-cross-fade-in {
    animation: fadeIn 0.3s ease-in-out;
    z-index: 20;
  }

  .hover-underline {
    position: relative;
    display: inline-block;
  }
  
  .hover-underline::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px; /* slightly thicker */
    bottom: -6px; /* gap between text and underline */
    left: 0;
    background-color: currentColor;
    transition: width 0.8s cubic-bezier(0.25, 1, 0.5, 1); /* custom easing */
    transform-origin: left;
  }
  
  .hover-underline:hover::after {
    width: 100%;
  }